CODE:

    - audit public/protected/private, set protected on inter-package methods

    - javadoc on all public methods & classes of API

RENDERING:

    - refactor URERenderer as URERendererASCII and leave an abstract base URERenderer

    - in stampGlyph, instead of reading/writing line by line read the whole source + dest image RGB data at once (optimization)

    - realtime animation
        skeleton of this is in place

    - dynamic sunlight color
        - lerp between daytime points (in turns) (gil: working on this)

    - options setting methods for camera, renderer

    - implement Camera.lightHueToX settings

    - implement camera zoom

    - .drawOverTerrain, .drawActorAndThings, .drawThingsStack to control glyph stacking

    - .fogColor - custom color for nonvisible areas

    - Terrain.groupVariants = [147, 149, 138...] - one variant char per neighbor-arrangement (for walls etc)


ENGINE:

    - make URECommander control a complete game loop with setting for realtime (ms per tick) or wait-after-command

    - make UREArea file constructor into a type of AreaGenerator and make the default constructor sensible

    - smooth out keyboard input

    - actor ticks

    - daytime tracker
        - lerp color points through defined ticks-per-day cycle of sunlight
        - track number of days passed

    - UREAreaGenerator
        - UREAreaGenFile
        - UREAreaGenSimpleTown
        - UREAreaGenWilds
        - UREAreaGenCave
        - UREAreaGenDungeon

    - random association-generator
        - takes a bag of objects (healing potion, death potion) and a bag of qualities (sparkly, green)
        - random associates qualities to objects, can query for quality for object or object for quality
        - track known/unknown per association

    - area links
        - attach to terrain type? to cell?

UI:

    - text scroll pane
        - highlight current line
        - scrollbar/binds
        - expand/retract

    - text info pane
        - define fields w xy, text, fg/bg color
            $(name) the $(class)      St:$(st) Dx:$(dx) Gay:$(gay)   $(alignment)
            $(location)  turn $(turn)
        - InfoPanel.fields = HashMap<String,String> .fieldColors = HashMap<String,Color>
        - InfoPanel(xsize,ysize,templateString,font,fgcolor,bgcolor);
        - InfoPanel.updateField("name", "Gilmore");
        - InfoPanel.updateFieldColor("name", Color);

    - target picker (in renderer)
        - draw cursor
        - optional line from origin
        - optional show LOS true/false

    - print terrain.walkString when walked on

